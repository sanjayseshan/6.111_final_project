$date
	Wed Dec  6 01:44:32 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module checked_tb $end
$var wire 1 ! valid_out $end
$var wire 16 " tag_out [15:0] $end
$var wire 4 # size_out [3:0] $end
$var wire 16 $ max_tag_out [15:0] $end
$var wire 1 % full_out $end
$var wire 1 & empty_out $end
$var wire 32 ' data_out [31:0] $end
$var reg 1 ( clk_in $end
$var reg 1 ) deq_largest_in $end
$var reg 1 * deq_smallest_in $end
$var reg 32 + enq_data_in [31:0] $end
$var reg 1 , enq_in $end
$var reg 16 - enq_tag_in [15:0] $end
$var reg 1 . rst_in $end
$scope module Q $end
$var wire 1 ( clk_in $end
$var wire 1 ) deq_largest_in $end
$var wire 1 * deq_smallest_in $end
$var wire 32 / enq_data_in [31:0] $end
$var wire 1 , enq_in $end
$var wire 16 0 enq_tag_in [15:0] $end
$var wire 1 . rst_in $end
$var wire 4 1 write_ptr [3:0] $end
$var parameter 32 2 DATA_WIDTH $end
$var parameter 32 3 DEPTH $end
$var parameter 32 4 TAG_WIDTH $end
$var reg 32 5 curval [31:0] $end
$var reg 32 6 data_out [31:0] $end
$var reg 1 & empty_out $end
$var reg 1 % full_out $end
$var reg 16 7 max_tag_out [15:0] $end
$var reg 32 8 maxval [31:0] $end
$var reg 4 9 prev_read_ptr [3:0] $end
$var reg 1 : push_lru $end
$var reg 4 ; read_ptr [3:0] $end
$var reg 1 < rem_lru $end
$var reg 4 = size_out [3:0] $end
$var reg 16 > tag_out [15:0] $end
$var reg 1 ! valid_out $end
$scope module lru_cache $end
$var wire 1 ( clk_in $end
$var wire 1 < deq_in $end
$var wire 4 ? enq_data_in [3:0] $end
$var wire 1 : enq_in $end
$var wire 1 . rst_in $end
$var parameter 33 @ DATA_WIDTH $end
$var parameter 32 A DEPTH $end
$var reg 4 B data_out [3:0] $end
$var reg 1 C empty_out $end
$var reg 1 D full_out $end
$var reg 4 E read_ptr [3:0] $end
$var reg 1 F valid_out $end
$var reg 4 G write_ptr [3:0] $end
$scope begin $ivl_for_loop3 $end
$var integer 32 H i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 I i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 J i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 K i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 A
b100 @
b10000 4
b1000 3
b100000 2
$end
#0
$dumpvars
b0 K
b1000 J
b0 I
b0 H
bx G
xF
bx E
xD
xC
bx B
bx ?
bx >
bx =
x<
bx ;
x:
bx 9
b0 8
bx 7
bx 6
b0 5
bx 1
b0 0
b0 /
0.
b0 -
0,
b0 +
0*
0)
0(
bx '
x&
x%
bx $
bx #
bx "
x!
$end
#5000
b0 $
b0 7
0<
0:
0!
1(
#10000
0(
1.
#15000
1F
b0 1
b0 B
1D
0C
b1000 J
0%
1&
b0 G
b0 E
b0 #
b0 =
b0 '
b0 6
b0 9
b0 ?
b0 ;
b1000 H
b1000 K
1(
#20000
0(
0.
#25000
1(
#30000
0(
1,
b1110 -
b1110 0
#35000
b1110 8
b1110 5
b1000 J
0&
1<
b1 #
b1 =
1(
#40000
0(
0,
#45000
b1 1
b1 B
0D
b1110 $
b1110 7
0<
b1 E
1(
#50000
0(
#55000
1(
#60000
0(
#65000
1(
#70000
0(
1,
b100011 -
b100011 0
b1 +
b1 /
#75000
b1 ;
b1000 J
b100011 8
b100011 5
1<
b10 #
b10 =
1(
#80000
0(
0,
#85000
b10 1
b10 B
b100011 $
b100011 7
0<
b10 E
1(
#90000
0(
#95000
1(
#100000
0(
#105000
1(
#110000
0(
1,
b11 -
b11 0
b10 +
b10 /
#115000
b1 ;
b1000 J
b100011 8
b100011 5
1<
b11 #
b11 =
1(
#120000
0(
0,
#125000
b11 1
b11 B
0<
b11 E
1(
#130000
0(
1)
#135000
b1000 J
b1110 8
b1110 5
b10 #
b10 =
b1 9
b1 ?
b0 ;
1!
1:
b100011 "
b100011 >
b1 '
b1 6
1(
#140000
0(
0)
#145000
b1110 $
b1110 7
0:
0!
b1 G
1(
#150000
0(
1,
b1001011 -
b1001011 0
b11 +
b11 /
#155000
b11 ;
b1000 J
b1001011 8
b1001011 5
1<
b11 #
b11 =
1(
#160000
0(
0,
#165000
b100 1
b100 B
b1001011 $
b1001011 7
0<
b100 E
1(
#170000
0(
1,
b1100 -
b1100 0
b100 +
b100 /
#175000
b11 ;
b1000 J
b1001011 8
b1001011 5
1<
b100 #
b100 =
1(
#180000
0(
0,
#185000
b101 1
b101 B
0<
b101 E
1(
#190000
0(
1,
b11011 -
b11011 0
b101 +
b101 /
#195000
b11 ;
b1000 J
b1001011 8
b1001011 5
1<
b101 #
b101 =
1(
#200000
0(
0,
#205000
b110 1
b110 B
0<
b110 E
1(
#210000
0(
1)
#215000
b1000 J
b11011 8
b11011 5
b100 #
b100 =
b11 9
b11 ?
b101 ;
1!
1:
b1001011 "
b1001011 >
b11 '
b11 6
1(
#220000
0(
0)
#225000
b11011 $
b11011 7
0:
0!
b10 G
1(
#230000
0(
1)
#235000
b1000 J
b1110 8
b1110 5
b11 #
b11 =
b101 9
b101 ?
b0 ;
1!
1:
b11011 "
b11011 >
b101 '
b101 6
1(
#240000
0(
0)
#245000
b1110 $
b1110 7
0:
0!
b11 G
1(
#250000
b10 ;
b1000 I
b1110 8
b11 5
0(
1*
#255000
b1000 I
b1110 8
b1100 5
b10 #
b10 =
b10 9
b10 ?
b100 ;
1!
1:
b11 "
b11 >
b10 '
b10 6
1(
#260000
b0 ;
b1000 J
b1110 8
b1110 5
0(
0*
#265000
0:
0!
b100 G
1(
#270000
0(
1)
#275000
b1000 J
b1100 8
b1100 5
b1 #
b1 =
b0 9
b0 ?
b100 ;
1!
1:
b1110 "
b1110 >
b0 '
b0 6
1(
#280000
0(
0)
#285000
b1100 $
b1100 7
0:
0!
b101 G
1(
#290000
b1000 I
b1100 8
b1100 5
0(
1*
#295000
b1000 I
b0 8
b11111111111111111111111111111111 5
1&
b0 #
b0 =
b100 9
b100 ?
b101 ;
1!
1:
b1100 "
b1100 >
b100 '
b100 6
1(
#300000
b1000 J
b0 5
0(
0*
#305000
1D
b0 $
b0 7
0:
0!
b110 G
1(
#310000
0(
1,
b1111 -
b1111 0
b110 +
b110 /
#315000
b1111 8
b1111 5
b110 ;
b1000 J
0&
1<
b1 #
b1 =
1(
#320000
0(
0,
#325000
b111 1
b111 B
0D
b1111 $
b1111 7
0<
b111 E
1(
#330000
0(
1)
#335000
b1000 J
b0 8
b0 5
1&
b0 #
b0 =
b110 9
b110 ?
b111 ;
1!
1:
b1111 "
b1111 >
b110 '
b110 6
1(
#340000
0(
0)
#345000
1D
b0 $
b0 7
0:
0!
b111 G
1(
#350000
0(
1,
b10111101 -
b10111101 0
b111 +
b111 /
#355000
b10111101 8
b10111101 5
b1000 J
0&
1<
b1 #
b1 =
1(
#360000
0(
0,
#365000
b1 1
b1 B
0D
b10111101 $
b10111101 7
0<
b0 E
1(
#370000
0(
1,
b1011010000 -
b1011010000 0
b1000 +
b1000 /
#375000
b1 ;
b1000 J
b1011010000 8
b1011010000 5
1<
b10 #
b10 =
1(
#380000
0(
0,
#385000
b11 1
b11 B
b1011010000 $
b1011010000 7
0<
b1 E
1(
#390000
b111 ;
b1000 I
b1011010000 8
b10111101 5
0(
1*
#395000
b1000 I
b1011010000 8
b1011010000 5
b1 #
b1 =
b111 9
b111 ?
b1 ;
1!
1:
b10111101 "
b10111101 >
b111 '
b111 6
1(
#400000
b1000 J
b1011010000 8
b1011010000 5
0(
0*
#405000
0:
0!
b0 G
1(
#410000
0(
1)
#415000
b1000 J
b0 8
b0 5
1&
b0 #
b0 =
b1 9
b1 ?
b10 ;
1!
1:
b1011010000 "
b1011010000 >
b1000 '
b1000 6
1(
#420000
0(
0)
#425000
1D
b0 $
b0 7
0:
0!
b1 G
1(
#430000
0(
#435000
1(
#440000
0(
#445000
1(
#450000
0(
#455000
1(
#460000
0(
#465000
1(
#470000
0(
#475000
1(
#480000
0(
#485000
1(
#490000
0(
#495000
1(
#500000
0(
#505000
1(
#510000
0(
#515000
1(
#520000
0(
#525000
1(
#530000
0(
#535000
1(
#540000
0(
#545000
1(
#550000
0(
#555000
1(
#560000
0(
#565000
1(
#570000
0(
#575000
1(
#580000
0(
#585000
1(
#590000
0(
#595000
1(
#600000
0(
#605000
1(
#610000
0(
#615000
1(
#620000
0(

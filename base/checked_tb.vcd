$date
	Sat Dec  9 16:13:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module checked_tb $end
$var wire 1 ! valid_out $end
$var wire 16 " tag_out [15:0] $end
$var wire 3 # size_out [2:0] $end
$var wire 16 $ max_tag_out [15:0] $end
$var wire 1 % full_out $end
$var wire 1 & empty_out $end
$var wire 32 ' data_out [31:0] $end
$var reg 1 ( clk_in $end
$var reg 1 ) deq_largest_in $end
$var reg 1 * deq_smallest_in $end
$var reg 32 + enq_data_in [31:0] $end
$var reg 1 , enq_in $end
$var reg 16 - enq_tag_in [15:0] $end
$var reg 1 . rst_in $end
$scope module Q $end
$var wire 1 ( clk_in $end
$var wire 1 ) deq_largest_in $end
$var wire 1 * deq_smallest_in $end
$var wire 32 / enq_data_in [31:0] $end
$var wire 1 , enq_in $end
$var wire 16 0 enq_tag_in [15:0] $end
$var wire 1 . rst_in $end
$var wire 3 1 write_ptr [2:0] $end
$var wire 1 2 proc_deq_ready $end
$var wire 1 3 in_req_valid_out $end
$var wire 2 4 in_req_out [1:0] $end
$var parameter 32 5 DATA_WIDTH $end
$var parameter 32 6 DEPTH $end
$var parameter 32 7 TAG_WIDTH $end
$var reg 1 8 cal_min_max $end
$var reg 1 9 checked_enq_in $end
$var reg 32 : curval [31:0] $end
$var reg 32 ; data_out [31:0] $end
$var reg 1 < deq_high $end
$var reg 1 = deq_stall_out $end
$var reg 1 & empty_out $end
$var reg 1 % full_out $end
$var reg 4 > i [3:0] $end
$var reg 16 ? max_tag_out [15:0] $end
$var reg 32 @ maxval [31:0] $end
$var reg 3 A prev_read_ptr [2:0] $end
$var reg 1 B push_lru $end
$var reg 3 C read_ptr_max [2:0] $end
$var reg 3 D read_ptr_min [2:0] $end
$var reg 1 E ready $end
$var reg 1 F rem_lru $end
$var reg 3 G size_out [2:0] $end
$var reg 16 H tag_out [15:0] $end
$var reg 1 ! valid_out $end
$scope module buf_out_max $end
$var wire 1 ( clk_in $end
$var wire 1 E deq_in $end
$var wire 2 I enq_data_in [1:0] $end
$var wire 1 J enq_in $end
$var wire 1 . rst_in $end
$var parameter 32 K DATA_WIDTH $end
$var parameter 32 L DEPTH $end
$var reg 2 M data_out [1:0] $end
$var reg 1 2 empty_out $end
$var reg 1 N full_out $end
$var reg 4 O read_ptr [3:0] $end
$var reg 1 3 valid_out $end
$var reg 4 P write_ptr [3:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 Q i [31:0] $end
$upscope $end
$upscope $end
$scope module lru_cache $end
$var wire 1 ( clk_in $end
$var wire 1 F deq_in $end
$var wire 3 R enq_data_in [2:0] $end
$var wire 1 B enq_in $end
$var wire 1 . rst_in $end
$var parameter 33 S DATA_WIDTH $end
$var parameter 32 T DEPTH $end
$var reg 3 U data_out [2:0] $end
$var reg 1 V empty_out $end
$var reg 1 W full_out $end
$var reg 3 X read_ptr [2:0] $end
$var reg 1 Y valid_out $end
$var reg 3 Z write_ptr [2:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 [ i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 \ i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 T
b11 S
b1000 L
b10 K
b10000 7
b11 6
b100000 5
$end
#0
$dumpvars
b0 \
b0 [
bx Z
xY
bx X
xW
xV
bx U
bx R
b0 Q
bx P
bx O
xN
bx M
0J
b0 I
bx H
bx G
xF
xE
bx D
bx C
xB
bx A
bx @
bx ?
bx >
x=
x<
bx ;
bx :
x9
x8
bx 4
x3
x2
bx 1
b0 0
b0 /
0.
b0 -
0,
b0 +
0*
0)
0(
bx '
x&
x%
bx $
bx #
bx "
x!
$end
#5000
03
09
0F
0B
0!
1(
#10000
0(
1.
#15000
1Y
b0 1
b0 U
b0 P
b0 O
b0 4
b0 M
b0 Z
b0 X
0%
1&
b0 #
b0 G
b0 '
b0 ;
b0 A
b0 R
0=
0E
08
b0 $
b0 ?
0<
b0 @
b11111111111111111111111111111111 :
b0 >
b1000 Q
b11 [
b11 \
1(
#20000
0(
0.
#25000
0N
12
1(
#30000
0(
1,
b1110 -
b1110 0
#35000
19
1F
0&
b1 #
b1 G
b0 D
b1110 :
b0 C
b1110 $
b1110 ?
1(
#40000
0(
0,
#45000
b1 1
b1 U
09
0F
b1 X
1(
#50000
0(
#55000
1(
#60000
0(
#65000
1(
#70000
0(
1,
b100011 -
b100011 0
b1 +
b1 /
#75000
19
1F
b10 #
b10 G
b1 C
b100011 $
b100011 ?
1(
#80000
0(
0,
#85000
b10 1
b10 U
09
0F
b10 X
1(
#90000
0(
#95000
1(
#100000
0(
#105000
1(
#110000
0(
1,
b11 -
b11 0
b10 +
b10 /
#115000
19
1F
1%
b11 #
b11 G
b10 D
b11 :
1(
#120000
0(
0,
#125000
0Y
b0 1
b0 U
09
0F
b0 X
1(
#130000
1J
0(
b1 I
1)
#135000
b1 P
1=
1E
1<
1(
#140000
0J
0(
b0 I
0)
#145000
02
1(
#150000
0(
#155000
b1 O
13
b1 4
b1 M
1(
#160000
0(
#165000
0%
b10 #
b10 G
b1 A
b1 R
1!
1B
b100011 "
b100011 H
b1 '
b1 ;
12
03
1(
#170000
0(
1,
b1001011 -
b1001011 0
b11 +
b11 /
#175000
1Y
b1 1
b1 U
b1 Z
19
1F
1%
b11 #
b11 G
0B
0!
1(
#180000
0(
0,
#185000
0Y
09
0F
b1 X
1(
#190000
0(
#195000
1(
#200000
0(
#205000
1(
#210000
0(
#215000
1(
#220000
0(
#225000
1(
#230000
0(
#235000
1(
#240000
0(
#245000
1(
#250000
0(
#255000
1(
#260000
0(
#265000
1(
#270000
0(
#275000
1(
#280000
0(
#285000
1(
#290000
0(
#295000
1(
#300000
0(
#305000
1(
#310000
0(
#315000
1(
#320000
0(
#325000
1(
#330000
0(
#335000
1(
#340000
0(
#345000
1(
#350000
0(
#355000
1(
#360000
0(
#365000
1(
#370000
0(
#375000
1(
#380000
0(

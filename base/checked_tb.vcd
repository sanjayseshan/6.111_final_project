$date
	Sat Dec  9 01:58:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module checked_tb $end
$var wire 1 ! valid_out $end
$var wire 16 " tag_out [15:0] $end
$var wire 3 # size_out [2:0] $end
$var wire 16 $ max_tag_out [15:0] $end
$var wire 1 % full_out $end
$var wire 1 & empty_out $end
$var wire 32 ' data_out [31:0] $end
$var reg 1 ( clk_in $end
$var reg 1 ) deq_largest_in $end
$var reg 1 * deq_smallest_in $end
$var reg 32 + enq_data_in [31:0] $end
$var reg 1 , enq_in $end
$var reg 16 - enq_tag_in [15:0] $end
$var reg 1 . rst_in $end
$scope module Q $end
$var wire 1 ( clk_in $end
$var wire 1 ) deq_largest_in $end
$var wire 1 * deq_smallest_in $end
$var wire 32 / enq_data_in [31:0] $end
$var wire 1 , enq_in $end
$var wire 16 0 enq_tag_in [15:0] $end
$var wire 1 . rst_in $end
$var wire 3 1 write_ptr [2:0] $end
$var wire 1 2 proc_deq_ready $end
$var wire 1 3 in_req_valid_out $end
$var wire 2 4 in_req_out [1:0] $end
$var parameter 32 5 DATA_WIDTH $end
$var parameter 32 6 DEPTH $end
$var parameter 32 7 TAG_WIDTH $end
$var reg 1 8 cal_min_max $end
$var reg 32 9 curval [31:0] $end
$var reg 32 : data_out [31:0] $end
$var reg 1 ; deq_high $end
$var reg 1 & empty_out $end
$var reg 1 % full_out $end
$var reg 4 < i [3:0] $end
$var reg 16 = max_tag_out [15:0] $end
$var reg 32 > maxval [31:0] $end
$var reg 3 ? prev_read_ptr [2:0] $end
$var reg 1 @ push_lru $end
$var reg 3 A read_ptr_max [2:0] $end
$var reg 3 B read_ptr_min [2:0] $end
$var reg 1 C ready $end
$var reg 1 D rem_lru $end
$var reg 3 E size_out [2:0] $end
$var reg 16 F tag_out [15:0] $end
$var reg 1 ! valid_out $end
$scope module buf_out_max $end
$var wire 1 ( clk_in $end
$var wire 1 C deq_in $end
$var wire 2 G enq_data_in [1:0] $end
$var wire 1 H enq_in $end
$var wire 1 . rst_in $end
$var parameter 32 I DATA_WIDTH $end
$var parameter 32 J DEPTH $end
$var reg 2 K data_out [1:0] $end
$var reg 1 2 empty_out $end
$var reg 1 L full_out $end
$var reg 4 M read_ptr [3:0] $end
$var reg 1 3 valid_out $end
$var reg 4 N write_ptr [3:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 O i [31:0] $end
$upscope $end
$upscope $end
$scope module lru_cache $end
$var wire 1 ( clk_in $end
$var wire 1 D deq_in $end
$var wire 3 P enq_data_in [2:0] $end
$var wire 1 @ enq_in $end
$var wire 1 . rst_in $end
$var parameter 33 Q DATA_WIDTH $end
$var parameter 32 R DEPTH $end
$var reg 3 S data_out [2:0] $end
$var reg 1 T empty_out $end
$var reg 1 U full_out $end
$var reg 3 V read_ptr [2:0] $end
$var reg 1 W valid_out $end
$var reg 3 X write_ptr [2:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 Y i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 Z i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 R
b11 Q
b1000 J
b10 I
b10000 7
b11 6
b100000 5
$end
#0
$dumpvars
b0 Z
b0 Y
bx X
xW
bx V
xU
xT
bx S
bx P
b0 O
bx N
bx M
xL
bx K
0H
b0 G
bx F
bx E
xD
xC
bx B
bx A
x@
bx ?
bx >
bx =
bx <
x;
bx :
bx 9
x8
bx 4
x3
x2
bx 1
b0 0
b0 /
0.
b0 -
0,
b0 +
0*
0)
0(
bx '
x&
x%
bx $
bx #
bx "
x!
$end
#5000
03
0D
0@
0!
1(
#10000
0(
1.
#15000
1W
b0 1
b0 S
b0 N
b0 M
b0 4
b0 K
b0 X
b0 V
b0 #
b0 E
b0 '
b0 :
b0 ?
b0 P
1C
08
b0 $
b0 =
0;
b0 >
b11111111111111111111111111111111 9
b0 <
b1000 O
b11 Y
b11 Z
1(
#20000
0(
0.
#25000
0%
1&
0L
12
1(
#30000
0(
1,
b1110 -
b1110 0
#35000
1D
b1 #
b1 E
b0 B
b1110 9
b0 A
b1110 $
b1110 =
1(
#40000
0(
0,
#45000
b1 1
b1 S
0&
0D
b1 V
1(
#50000
0(
#55000
1(
#60000
0(
#65000
1(
#70000
0(
1,
b100011 -
b100011 0
b1 +
b1 /
#75000
1D
b10 #
b10 E
b1 A
b100011 $
b100011 =
1(
#80000
0(
0,
#85000
b10 1
b10 S
0D
b10 V
1(
#90000
0(
#95000
1(
#100000
0(
#105000
1(
#110000
0(
1,
b11 -
b11 0
b10 +
b10 /
#115000
1D
b11 #
b11 E
b10 B
b11 9
1(
#120000
0(
0,
#125000
0W
b0 1
b0 S
1%
0D
b0 V
1(
#130000
1H
0(
b1 G
1)
#135000
b1 N
1;
1(
#140000
0H
0(
b0 G
0)
#145000
02
1(
#150000
0(
#155000
b1 M
13
b1 4
b1 K
1(
#160000
0(
#165000
b10 #
b10 E
b1 ?
b1 P
1!
1@
b100011 "
b100011 F
b1 '
b1 :
12
03
1(
#170000
0(
1,
b1001011 -
b1001011 0
b11 +
b11 /
#175000
1W
b1 1
b1 S
b1 X
0%
0@
0!
b0 A
b1001011 $
b1001011 =
1(
#180000
0(
0,
#185000
1(
#190000
0(
#195000
1(
#200000
0(
#205000
1(
#210000
0(
#215000
1(
#220000
0(
#225000
1(
#230000
0(
#235000
1(
#240000
0(
#245000
1(
#250000
0(
#255000
1(
#260000
0(
#265000
1(
#270000
0(
#275000
1(
#280000
0(
#285000
1(
#290000
0(
#295000
1(
#300000
0(
#305000
1(
#310000
0(
#315000
1(
#320000
0(
#325000
1(
#330000
0(
#335000
1(
#340000
0(
#345000
1(
#350000
0(
#355000
1(
#360000
0(
#365000
1(
#370000
0(
#375000
1(
#380000
0(

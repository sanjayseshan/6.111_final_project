$date
   Fri Dec  1 01:58:30 2023
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module bfis_tb $end
$var reg 1 W! clk_in $end
$var reg 1 X! rst_in $end
$var reg 32 Y! vertex_in [31:0] $end
$var reg 32 Z! vertex_addr_in [31:0] $end
$var reg 1 [! vertex_valid_in $end
$var reg 16 \! k_in [15:0] $end
$var reg 1 ' valid_out $end
$var reg 32 ]! query_pos_in0 [31:0] $end
$var reg 32 ^! query_pos_in1 [31:0] $end
$var reg 32 _! top_k_out0 [31:0] $end
$var reg 32 `! top_k_out1 [31:0] $end
$var reg 32 a! top_k_out2 [31:0] $end
$var reg 32 b! top_k_out3 [31:0] $end
$scope module bfis_m $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 # vertex_in [31:0] $end
$var wire 32 $ vertex_addr_in [31:0] $end
$var wire 1 % vertex_valid_in $end
$var wire 16 & k_in [15:0] $end
$var reg 1 ' valid_out $end
$var reg 5 ( state [4:0] $end
$var reg 2 ) ct_dist [1:0] $end
$var reg 32 * neigh_fifo_out [31:0] $end
$var reg 32 + data_out [31:0] $end
$var reg 32 , v_addr_in [31:0] $end
$var reg 1 - pos_empty_out $end
$var reg 1 . pos_full_out $end
$var reg 1 / fetch_data_valid_out $end
$var reg 1 0 pos_deq_in $end
$var reg 1 1 valid_in $end
$var reg 1 2 ready_out $end
$var reg 1 3 neigh_full_out $end
$var reg 1 4 neigh_empty_out $end
$var reg 1 5 neigh_valid_out $end
$var reg 32 6 pq_out [31:0] $end
$var reg 32 7 pq_dist_out [31:0] $end
$var reg 1 8 pq_valid_out $end
$var reg 4 9 pq_size [3:0] $end
$var reg 1 : pq_deq_in $end
$var reg 1 ; mem_valid_in $end
$var reg 32 < mem_data_in [31:0] $end
$var reg 1 = mem_valid_out $end
$var reg 32 > mem_req_out [31:0] $end
$var reg 1 ? mem_valid_in2 $end
$var reg 32 @ mem_data_in2 [31:0] $end
$var reg 1 A mem_valid_out2 $end
$var reg 32 B mem_req_out2 [31:0] $end
$var reg 1 C data_valid_out $end
$var reg 32 D dist_out [31:0] $end
$var reg 1 E dist_valid_out $end
$var reg 1 F checked $end
$var reg 1 G visited $end
$var reg 1 H valid_checked $end
$var reg 1 I valid_visited $end
$scope module distance_calc $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var reg 32 D distance_sq_out [31:0] $end
$var reg 1 E data_valid_out $end
$var reg 3 J state [2:0] $end
$var reg 32 K distance [31:0] $end
$var reg 1 L valid_add_out $end
$var reg 1 M i [0:0] $end
$var reg 1 N j [0:0] $end
$scope module add_distances $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 O data_valid_in $end
$var reg 32 D distance_sq_out [31:0] $end
$var reg 1 E data_valid_out $end
$upscope $end
$upscope $end
$scope module s $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 P deq_in $end
$var wire 32 $ enq_data_in [31:0] $end
$var wire 32 Q enq_tag_in [31:0] $end
$var wire 1 R enq_in $end
$var reg 1 S full_out $end
$var reg 32 , data_out [31:0] $end
$var reg 32 7 tag_out [31:0] $end
$var reg 4 9 size_out [3:0] $end
$var reg 1 T empty_out $end
$var reg 1 8 valid_out $end
$var reg 4 U read_ptr [3:0] $end
$var reg 4 V write_ptr [3:0] $end
$var reg 32 W curval [31:0] $end
$var reg 1 X rem_lru $end
$var reg 1 Y push_lru $end
$scope begin Block39_4 $end
$var reg 32 Z i [31:0] $end
$upscope $end
$scope module lru_cache $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 [ deq_in $end
$var wire 4 \ enq_data_in [3:0] $end
$var wire 1 ] enq_in $end
$var reg 1 ^ full_out $end
$var reg 4 V data_out [3:0] $end
$var reg 1 _ empty_out $end
$var reg 1 ` valid_out $end
$var reg 4 a read_ptr [3:0] $end
$var reg 4 b write_ptr [3:0] $end
$scope begin Block133_7 $end
$var reg 32 c i [31:0] $end
$upscope $end
$upscope $end
$scope begin Block62_9 $end
$var reg 32 d i [31:0] $end
$upscope $end
$upscope $end
$scope module gmem $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 e idx_addr [31:0] $end
$var wire 1 f idx_validin $end
$var wire 32 g data_addra [31:0] $end
$var wire 32 h data_addrb [31:0] $end
$var wire 1 i data_validina $end
$var wire 1 j data_validinb $end
$var reg 32 k rowidx_out [31:0] $end
$var reg 32 < data_outa [31:0] $end
$var reg 32 @ data_outb [31:0] $end
$var reg 1 ; data_valid_outa $end
$var reg 1 ? data_valid_outb $end
$var reg 1 l rowidx_valid_out $end
$var reg 32 m addra [31:0] $end
$var reg 32 n addrb [31:0] $end
$var reg 32 o addrc [31:0] $end
$var reg 2 p cta [1:0] $end
$var reg 1 q ctb $end
$var reg 2 r ctc [1:0] $end
$scope module data_mem $end
$var wire 10 s addra [9:0] $end
$var wire 10 t addrb [9:0] $end
$var wire 32 u dina [31:0] $end
$var wire 32 v dinb [31:0] $end
$var wire 1 ! clka $end
$var wire 1 ! clkb $end
$var wire 1 w wea $end
$var wire 1 x web $end
$var wire 1 y ena $end
$var wire 1 z enb $end
$var wire 1 " rsta $end
$var wire 1 " rstb $end
$var wire 1 { regcea $end
$var wire 1 | regceb $end
$var wire 32 } douta [31:0] $end
$var wire 32 ~ doutb [31:0] $end
$var reg 32 !! ram_data_a [31:0] $end
$var reg 32 "! ram_data_b [31:0] $end
$var integer 32 #! idx [31:0] $end
$var reg 32 $! \output_register.douta_reg  [31:0] $end
$var reg 32 %! \output_register.doutb_reg  [31:0] $end
$upscope $end
$scope module ptr_mem $end
$var wire 10 &! addra [9:0] $end
$var wire 32 '! dina [31:0] $end
$var wire 1 ! clka $end
$var wire 1 (! wea $end
$var wire 1 )! ena $end
$var wire 1 " rsta $end
$var wire 1 *! regcea $end
$var wire 32 +! douta [31:0] $end
$var reg 32 ,! ram_data [31:0] $end
$var reg 32 -! \output_register.douta_reg  [31:0] $end
$upscope $end
$upscope $end
$scope module graph $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 .! v_addr_in [31:0] $end
$var wire 1 /! valid_in $end
$var reg 1 2 ready_out $end
$var wire 1 0! pos_deq_in $end
$var reg 32 + data_out [31:0] $end
$var reg 1 / data_valid_out $end
$var reg 1 . pos_full_out $end
$var reg 1 - pos_empty_out $end
$var wire 1 1! neigh_deq_in $end
$var reg 32 * neigh_fifo_out [31:0] $end
$var reg 1 5 neigh_valid_out $end
$var reg 1 3 neigh_full_out $end
$var reg 1 4 neigh_empty_out $end
$var wire 1 2! mem_valid_in $end
$var wire 32 3! mem_data_in [31:0] $end
$var reg 1 = mem_valid_out $end
$var reg 32 > mem_req_out [31:0] $end
$var wire 1 4! mem_valid_in2 $end
$var wire 32 5! mem_data_in2 [31:0] $end
$var reg 1 A mem_valid_out2 $end
$var reg 32 B mem_req_out2 [31:0] $end
$var reg 3 6! ct [2:0] $end
$var reg 1 7! req_ready_n $end
$scope module neighbors $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 1! deq_in $end
$var wire 32 5! enq_data_in [31:0] $end
$var wire 1 8! enq_in $end
$var reg 1 3 full_out $end
$var reg 32 * data_out [31:0] $end
$var reg 1 4 empty_out $end
$var reg 1 5 valid_out $end
$var reg 2 9! read_ptr [1:0] $end
$var reg 2 :! write_ptr [1:0] $end
$scope begin Block27_23 $end
$var reg 32 ;! i [31:0] $end
$upscope $end
$upscope $end
$scope module position $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 0! deq_in $end
$var wire 32 3! enq_data_in [31:0] $end
$var wire 1 <! enq_in $end
$var reg 1 . full_out $end
$var reg 32 + data_out [31:0] $end
$var reg 1 - empty_out $end
$var reg 1 / valid_out $end
$var reg 2 =! read_ptr [1:0] $end
$var reg 2 >! write_ptr [1:0] $end
$scope begin Block27_23 $end
$var reg 32 ?! i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cvmem $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 @! c_addr_in [31:0] $end
$var wire 32 A! v_addr_in [31:0] $end
$var wire 1 B! c_addr_valid_in $end
$var wire 1 C! v_addr_valid_in $end
$var wire 1 D! write_c_data_in $end
$var wire 1 E! write_c_valid_in $end
$var wire 1 F! write_v_data_in $end
$var wire 1 G! write_v_valid_in $end
$var reg 1 F checked_out $end
$var reg 1 G visited_out $end
$var reg 1 H valid_c_out $end
$var reg 1 I valid_v_out $end
$var reg 1 H! counter $end
$var reg 1 I! counter2 $end
$scope module bram_3 $end
$var wire 10 J! addra [9:0] $end
$var wire 1 D! dina [0:0] $end
$var wire 1 ! clka $end
$var wire 1 E! wea $end
$var wire 1 K! ena $end
$var wire 1 " rsta $end
$var wire 1 L! regcea $end
$var wire 1 M! douta [0:0] $end
$var reg 1 N! ram_data [0:0] $end
$var reg 1 O! \output_register.douta_reg  [0:0] $end
$upscope $end
$scope module bram_3_2 $end
$var wire 10 P! addra [9:0] $end
$var wire 1 F! dina [0:0] $end
$var wire 1 ! clka $end
$var wire 1 G! wea $end
$var wire 1 Q! ena $end
$var wire 1 " rsta $end
$var wire 1 R! regcea $end
$var wire 1 S! douta [0:0] $end
$var reg 1 T! ram_data [0:0] $end
$var reg 1 U! \output_register.douta_reg  [0:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin Block68_37 $end
$var reg 32 V! i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
b0 !!
0"
b0 "!
bx #
b10000000000 #!
bx $
b0 $!
x%
b0 %!
bx &
bz &!
x'
b0 '!
bx (
0(!
bx )
1)!
bx *
1*!
bx +
b0 +!
bx ,
b0 ,!
x-
b0 -!
x.
bx .!
x/
x/!
x0
10!
x1
11!
x2
x2!
x3
b0 3!
x4
x4!
x5
b0 5!
bx 6
bx 6!
bx 7
x7!
x8
08!
bx 9
bx 9!
x:
bx :!
x;
b0 ;!
b0 <
x<!
x=
bx =!
bx >
bx >!
x?
b0 ?!
b0 @
bx @!
xA
bx A!
bx B
xB!
xC
xC!
bx D
1D!
xE
xE!
0F
1F!
0G
xG!
xH
xH!
xI
xI!
bx J
bx J!
bx K
1K!
xL
1L!
xM
0M!
xN
0N!
xO
0O!
xP
bx P!
bx Q
1Q!
xR
1R!
xS
0S!
xT
0T!
bx U
0U!
bx V
b10 V!
b11111111111111111111111111111111 W
0W!
xX
0X!
xY
bx Y!
b1000 Z
bx Z!
x[
x[!
bx \
bx \!
x]
bx ]!
x^
bx ^!
x_
bx _!
x`
bx `!
bx a
bx a!
bx b
bx b!
b0 c
b0 d
bz e
zf
bx g
bx h
xi
xj
b0 k
xl
bx m
bx n
bx o
bx p
xq
bx r
bx s
bx t
b0 u
b0 v
0w
0x
1y
1z
1{
1|
b0 }
b0 ~
$end
#5000
1!
bx !!
bx "!
bx ,!
0/
02!
04!
05
07!
08
0;
0<!
0=
0?
0A
0B!
0C!
0E
0E!
0G!
0H
0I
xN!
0R
xT!
1W!
0X
0Y
0[
0]
b0 ]!
b0 ^!
0i
0j
0l
b0 p
0q
#10000
0!
1"
0W!
1X!
#15000
1!
0'
b0 (
b0 )
b0 *
b0 +
b0 ,
1-
0.
b0 .!
12
03
14
b0 6!
b0 9
b0 9!
0:
b0 :!
b10 ;!
b0 =!
b0 >!
b10 ?!
b0 A!
b0 D
b0 J
0M
0O
0P
b0 P!
b0 Q
0S
1T
b0 U
b0 V
1W!
b1000 Z
b0 \
1^
0_
1`
b0 a
b0 b
b1000 c
b1000 d
#20000
0!
0"
b1 #
b1 $
1%
0W!
0X!
b1 Y!
b1 Z!
1[!
b101 ]!
b111 ^!
#25000
1!
bx $!
bx %!
b1 )
bx +!
bx -!
bx 3!
bx 5!
bx <
bx @
xF
xG
xM!
xO!
xS!
0T!
xU!
1W!
bx k
bx }
bx ~
#30000
0!
0%
0W!
0[!
#35000
1!
0G
1M
0N
0S!
0U!
1W!
#40000
0!
1%
0W!
1[!
#45000
1!
b10 )
1W!
#50000
0!
0%
0W!
0[!
#55000
1!
0M
1N
1W!
#60000
0!
0W!
#65000
1!
1M
0N
1W!
#70000
0!
0W!
#75000
1!
b1 J
0M
1N
1O
1W!
#80000
0!
0W!
#85000
1!
b110100 D
1E
b110100 Q
1R
1W!
#90000
0!
0W!
#95000
1!
b1 9
b0 J
0O
0T
b110100 W
1W!
1X
b1000 Z
1[
#100000
0!
0W!
#105000
1!
b1 (
1/!
11
1:
0E
1M
0N
1P
0R
b1 V
1W!
0X
0[
0^
b1 a
#110000
0!
0W!
#115000
1!
b1 ,
b1 .!
b110100 7
17!
18
b0 9
0:
1=
b1 >
1A
b11 B
1B!
1E!
b1 J
0M
1N
1O
0P
1T
b1 U
b11111111111111111111111111111111 W
1W!
1Y
b1000 Z
b1 \
1]
b1 g
b11 h
1i
1j
b1 s
b11 t
#120000
0!
0W!
b0 _!
b0 `!
#125000
1!
b1 !!
b111001010000111000001010010010 "!
08
b10 >
b100 B
0B!
1E
0E!
1H!
1I!
1R
1W!
0Y
0]
1^
b1 b
b10 g
b100 h
b1 p
1q
b10 s
b100 t
#130000
0!
0W!
b1 _!
b1 b!
#135000
1!
b10000100000000011000011101110110 !!
b1111000001100001001100100100000 "!
b1 $!
b111001010000111000001010010010 %!
b1 3!
b111001010000111000001010010010 5!
b1 9
b1 <
b111001010000111000001010010010 @
1H
0H!
1I
0I!
b0 J
0O
0T
b110100 W
1W!
1X
b1000 Z
1[
b1 }
b111001010000111000001010010010 ~
#140000
0!
0W!
b10 b!
#145000
1!
b10000100000000011000011101110110 $!
b1111000001100001001100100100000 %!
b10000100000000011000011101110110 3!
b1111000001100001001100100100000 5!
b10000100000000011000011101110110 <
b1111000001100001001100100100000 @
0E
0H
0I
1M
0N
0R
b10 V
1W!
0X
0[
0^
b10 a
b10000100000000011000011101110110 }
b1111000001100001001100100100000 ~
#150000
0!
0W!
b1 a!
#155000
1!
b1 J
0M
1N
1O
1W!
#160000
0!
0W!
b10000100000000011000011101110110 a!
#165000
1!
1E
1R
1W!
#170000
0!
0W!
#175000
1!
b10 9
b0 J
0O
b10 U
b110100 W
1W!
1X
b1000 Z
1[
b10 \
#180000
0!
0W!
#185000
1!
0E
1M
0N
0R
b11 V
1W!
0X
0[
b11 a
#190000
0!
0W!
#195000
1!
b1 J
0M
1N
1O
1W!
#200000
0!
0W!
#205000
1!
1E
1R
1W!
#210000
0!
0W!
#215000
1!
b11 9
b0 J
0O
b11 U
b110100 W
1W!
1X
b1000 Z
1[
b11 \
#220000
0!
0W!
#225000
1!
0E
1M
0N
0R
b100 V
1W!
0X
0[
b100 a
#230000
0!
0W!
#235000
1!
b1 J
0M
1N
1O
1W!
#240000
0!
0W!
#245000
1!
1E
1R
1W!
#250000
0!
0W!
#255000
1!
b100 9
b0 J
0O
b100 U
b110100 W
1W!
1X
b1000 Z
1[
b100 \
#260000
0!
0W!
#265000
1!
0E
1M
0N
0R
b101 V
1W!
0X
0[
b101 a
#270000
0!
0W!
#275000
1!
b1 J
0M
1N
1O
1W!
#280000
0!
0W!
#285000
1!
1E
1R
1W!
#290000
0!
0W!
#295000
1!
b101 9
b0 J
0O
b101 U
b110100 W
1W!
1X
b1000 Z
1[
b101 \
#300000
0!
0W!
#305000
1!
0E
1M
0N
0R
b110 V
1W!
0X
0[
b110 a
#310000
0!
0W!
#315000
1!
b1 J
0M
1N
1O
1W!
#320000
0!
0W!
#325000
1!
1E
1R
1W!
#330000
0!
0W!
#335000
1!
b110 9
b0 J
0O
b110 U
b110100 W
1W!
1X
b1000 Z
1[
b110 \
#340000
0!
0W!
#345000
1!
0E
1M
0N
0R
b111 V
1W!
0X
0[
b111 a
#350000
0!
0W!
#355000
1!
b1 J
0M
1N
1O
1W!
#360000
0!
0W!
#365000
1!
1E
1R
1W!
#370000
0!
0W!
#375000
1!
b111 9
b0 J
0O
b111 U
b110100 W
1W!
1X
b1000 Z
1[
b111 \
#380000
0!
0W!
#385000
1!
0E
1M
0N
0R
b1 V
1W!
0X
0[
b0 a
#390000
0!
0W!
#395000
1!
b1 J
0M
1N
1O
1W!
#400000
0!
0W!
#405000
1!
1E
1R
1W!
#410000
0!
0W!
#415000
1!
b0 J
0O
1W!
#420000
0!
0W!
#425000
1!
0E
1M
0N
0R
1W!
#430000
0!
0W!
#435000
1!
b1 J
0M
1N
1O
1W!
#440000
0!
0W!
#445000
1!
1E
1R
1W!
#450000
0!
0W!
#455000
1!
b0 J
0O
1W!
#460000
0!
0W!
#465000
1!
0E
1M
0N
0R
1W!
#470000
0!
0W!
#475000
1!
b1 J
0M
1N
1O
1W!
#480000
0!
0W!
#485000
1!
1E
1R
1W!
#490000
0!
0W!
#495000
1!
b0 J
0O
1W!
#500000
0!
0W!
#505000
1!
0E
1M
0N
0R
1W!
#510000
0!
0W!
#515000
1!
b1 J
0M
1N
1O
1W!
#520000
0!
0W!
#525000
1!
1E
1R
1W!
#530000
0!
0W!
#535000
1!
b0 J
0O
1W!
#540000
0!
0W!
#545000
1!
0E
1M
0N
0R
1W!
#550000
0!
0W!
#555000
1!
b1 J
0M
1N
1O
1W!
#560000
0!
0W!
#565000
1!
1E
1R
1W!
#570000
0!
0W!
#575000
1!
b0 J
0O
1W!
#580000
0!
0W!
#585000
1!
0E
1M
0N
0R
1W!

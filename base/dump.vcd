$date
   Mon Dec  4 21:55:07 2023
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module bfis_tb $end
$var reg 1 ]! clk_in $end
$var reg 1 ^! rst_in $end
$var reg 32 _! vertex_in [31:0] $end
$var reg 32 `! vertex_addr_in [31:0] $end
$var reg 1 a! vertex_valid_in $end
$var reg 16 b! k_in [15:0] $end
$var reg 1 ' valid_out $end
$var reg 32 c! query_pos_in0 [31:0] $end
$var reg 32 d! query_pos_in1 [31:0] $end
$var reg 32 e! top_k_out0 [31:0] $end
$var reg 32 f! top_k_out1 [31:0] $end
$var reg 32 g! top_k_out2 [31:0] $end
$var reg 32 h! top_k_out3 [31:0] $end
$var reg 32 i! query_pos_in2 [31:0] $end
$var reg 32 j! query_pos_in3 [31:0] $end
$var reg 5 ( state [4:0] $end
$scope module bfis_m $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 # vertex_in [31:0] $end
$var wire 32 $ vertex_addr_in [31:0] $end
$var wire 1 % vertex_valid_in $end
$var wire 16 & k_in [15:0] $end
$var reg 1 ' valid_out $end
$var reg 5 ( state [4:0] $end
$var reg 32 ) point_addr [31:0] $end
$var reg 3 * ct_dist [2:0] $end
$var reg 32 + neigh_fifo_out [31:0] $end
$var reg 32 , data_out [31:0] $end
$var reg 32 - v_addr_in [31:0] $end
$var reg 1 . pos_empty_out $end
$var reg 1 / pos_full_out $end
$var reg 1 0 fetch_data_valid_out $end
$var reg 1 1 pos_deq_in $end
$var reg 1 2 valid_in $end
$var reg 1 3 ready_out $end
$var reg 1 4 neigh_full_out $end
$var reg 1 5 neigh_empty_out $end
$var reg 1 6 neigh_valid_out $end
$var reg 1 7 reached_neigh_end_out $end
$var reg 32 8 pq_out [31:0] $end
$var reg 32 9 pq_dist_out [31:0] $end
$var reg 1 : pq_valid_out $end
$var reg 4 ; pq_size [3:0] $end
$var reg 1 < pq_deq_in $end
$var reg 1 = mem_valid_in $end
$var reg 32 > mem_data_in [31:0] $end
$var reg 1 ? mem_valid_out $end
$var reg 32 @ mem_req_out [31:0] $end
$var reg 1 A mem_valid_in2 $end
$var reg 32 B mem_data_in2 [31:0] $end
$var reg 1 C mem_valid_out2 $end
$var reg 32 D mem_req_out2 [31:0] $end
$var reg 1 E data_valid_out $end
$var reg 1 F neigh_deq $end
$var reg 1 G pos_deq $end
$var reg 32 H dist_out [31:0] $end
$var reg 1 I dist_valid_out $end
$var reg 1 J checked $end
$var reg 1 K visited $end
$var reg 1 L valid_checked $end
$var reg 1 M valid_visited $end
$scope module distance_calc $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var reg 32 H distance_sq_out [31:0] $end
$var reg 1 I data_valid_out $end
$var reg 3 N state [2:0] $end
$var reg 32 O distance [31:0] $end
$var reg 1 P valid_add_out $end
$var reg 2 Q i [1:0] $end
$var reg 2 R j [1:0] $end
$var reg 2 S k [1:0] $end
$upscope $end
$scope module s $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 T deq_in $end
$var wire 32 U enq_data_in [31:0] $end
$var wire 32 V enq_tag_in [31:0] $end
$var wire 1 W enq_in $end
$var reg 1 X full_out $end
$var reg 32 - data_out [31:0] $end
$var reg 32 9 tag_out [31:0] $end
$var reg 4 ; size_out [3:0] $end
$var reg 1 Y empty_out $end
$var reg 1 : valid_out $end
$var reg 4 Z read_ptr [3:0] $end
$var reg 4 [ write_ptr [3:0] $end
$var reg 32 \ curval [31:0] $end
$var reg 1 ] rem_lru $end
$var reg 1 ^ push_lru $end
$scope begin Block39_3 $end
$var reg 32 _ i [31:0] $end
$upscope $end
$scope module lru_cache $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 ` deq_in $end
$var wire 4 a enq_data_in [3:0] $end
$var wire 1 b enq_in $end
$var reg 1 c full_out $end
$var reg 4 [ data_out [3:0] $end
$var reg 1 d empty_out $end
$var reg 1 e valid_out $end
$var reg 4 f read_ptr [3:0] $end
$var reg 4 g write_ptr [3:0] $end
$scope begin Block133_6 $end
$var reg 32 h i [31:0] $end
$upscope $end
$upscope $end
$scope begin Block62_8 $end
$var reg 32 i i [31:0] $end
$upscope $end
$upscope $end
$scope module gmem $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 j idx_addr [31:0] $end
$var wire 1 k idx_validin $end
$var wire 32 l data_addra [31:0] $end
$var wire 32 m data_addrb [31:0] $end
$var wire 1 n data_validina $end
$var wire 1 o data_validinb $end
$var reg 32 p rowidx_out [31:0] $end
$var reg 32 > data_outa [31:0] $end
$var reg 32 B data_outb [31:0] $end
$var reg 1 = data_valid_outa $end
$var reg 1 A data_valid_outb $end
$var reg 1 q rowidx_valid_out $end
$var reg 32 r addra [31:0] $end
$var reg 32 s addrb [31:0] $end
$var reg 32 t addrc [31:0] $end
$var reg 2 u cta [1:0] $end
$var reg 1 v ctb $end
$var reg 2 w ctc [1:0] $end
$scope module data_mem $end
$var wire 10 x addra [9:0] $end
$var wire 10 y addrb [9:0] $end
$var wire 32 z dina [31:0] $end
$var wire 32 { dinb [31:0] $end
$var wire 1 ! clka $end
$var wire 1 ! clkb $end
$var wire 1 | wea $end
$var wire 1 } web $end
$var wire 1 ~ ena $end
$var wire 1 !! enb $end
$var wire 1 " rsta $end
$var wire 1 " rstb $end
$var wire 1 "! regcea $end
$var wire 1 #! regceb $end
$var wire 32 $! douta [31:0] $end
$var wire 32 %! doutb [31:0] $end
$var reg 32 &! ram_data_a [31:0] $end
$var reg 32 '! ram_data_b [31:0] $end
$var integer 32 (! idx [31:0] $end
$var reg 32 )! \output_register.douta_reg  [31:0] $end
$var reg 32 *! \output_register.doutb_reg  [31:0] $end
$upscope $end
$scope module ptr_mem $end
$var wire 10 +! addra [9:0] $end
$var wire 32 ,! dina [31:0] $end
$var wire 1 ! clka $end
$var wire 1 -! wea $end
$var wire 1 .! ena $end
$var wire 1 " rsta $end
$var wire 1 /! regcea $end
$var wire 32 0! douta [31:0] $end
$var reg 32 1! ram_data [31:0] $end
$var reg 32 2! \output_register.douta_reg  [31:0] $end
$upscope $end
$upscope $end
$scope module graph $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 3! v_addr_in [31:0] $end
$var wire 1 4! valid_in $end
$var reg 1 3 ready_out $end
$var wire 1 5! pos_deq_in $end
$var reg 32 , data_out [31:0] $end
$var reg 1 0 data_valid_out $end
$var reg 1 / pos_full_out $end
$var reg 1 . pos_empty_out $end
$var wire 1 6! neigh_deq_in $end
$var reg 32 + neigh_fifo_out [31:0] $end
$var reg 1 6 neigh_valid_out $end
$var reg 1 4 neigh_full_out $end
$var reg 1 5 neigh_empty_out $end
$var reg 1 7 reached_neigh_end_out $end
$var wire 1 7! mem_valid_in $end
$var wire 32 8! mem_data_in [31:0] $end
$var reg 1 ? mem_valid_out $end
$var reg 32 @ mem_req_out [31:0] $end
$var wire 1 9! mem_valid_in2 $end
$var wire 32 :! mem_data_in2 [31:0] $end
$var reg 1 C mem_valid_out2 $end
$var reg 32 D mem_req_out2 [31:0] $end
$var reg 4 ;! ct [3:0] $end
$var reg 1 <! req_ready_n $end
$var reg 1 =! req_ready_d $end
$scope module neighbors $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 6! deq_in $end
$var wire 32 :! enq_data_in [31:0] $end
$var wire 1 >! enq_in $end
$var reg 1 4 full_out $end
$var reg 32 + data_out [31:0] $end
$var reg 1 5 empty_out $end
$var reg 1 6 valid_out $end
$var reg 3 ?! read_ptr [2:0] $end
$var reg 3 @! write_ptr [2:0] $end
$scope begin Block27_21 $end
$var reg 32 A! i [31:0] $end
$upscope $end
$upscope $end
$scope module position $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 5! deq_in $end
$var wire 32 8! enq_data_in [31:0] $end
$var wire 1 B! enq_in $end
$var reg 1 / full_out $end
$var reg 32 , data_out [31:0] $end
$var reg 1 . empty_out $end
$var reg 1 0 valid_out $end
$var reg 5 C! read_ptr [4:0] $end
$var reg 5 D! write_ptr [4:0] $end
$scope begin Block27_24 $end
$var reg 32 E! i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cvmem $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 32 F! c_addr_in [31:0] $end
$var wire 32 G! v_addr_in [31:0] $end
$var wire 1 H! c_addr_valid_in $end
$var wire 1 I! v_addr_valid_in $end
$var wire 1 J! write_c_data_in $end
$var wire 1 K! write_c_valid_in $end
$var wire 1 L! write_v_data_in $end
$var wire 1 M! write_v_valid_in $end
$var reg 1 J checked_out $end
$var reg 1 K visited_out $end
$var reg 1 L valid_c_out $end
$var reg 1 M valid_v_out $end
$var reg 1 N! counter $end
$var reg 1 O! counter2 $end
$scope module bram_3 $end
$var wire 10 P! addra [9:0] $end
$var wire 1 J! dina [0:0] $end
$var wire 1 ! clka $end
$var wire 1 K! wea $end
$var wire 1 Q! ena $end
$var wire 1 " rsta $end
$var wire 1 R! regcea $end
$var wire 1 S! douta [0:0] $end
$var reg 1 T! ram_data [0:0] $end
$var reg 1 U! \output_register.douta_reg  [0:0] $end
$upscope $end
$scope module bram_3_2 $end
$var wire 10 V! addra [9:0] $end
$var wire 1 L! dina [0:0] $end
$var wire 1 ! clka $end
$var wire 1 M! wea $end
$var wire 1 W! ena $end
$var wire 1 " rsta $end
$var wire 1 X! regcea $end
$var wire 1 Y! douta [0:0] $end
$var reg 1 Z! ram_data [0:0] $end
$var reg 1 [! \output_register.douta_reg  [0:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin Block72_36 $end
$var reg 32 \! i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1!!
0"
1"!
bx #
1#!
bx $
b0 $!
x%
b0 %!
bx &
b0 &!
x'
b0 '!
bx (
b10000000000 (!
bx )
b0 )!
bx *
b0 *!
bx +
bz +!
bx ,
b0 ,!
bx -
0-!
x.
1.!
x/
1/!
x0
b0 0!
x1
b0 1!
x2
b0 2!
x3
bx 3!
x4
x4!
x5
x5!
x6
x6!
x7
x7!
bx 8
b0 8!
bx 9
x9!
x:
b0 :!
bx ;
bx ;!
x<
x<!
x=
x=!
b0 >
0>!
x?
bx ?!
bx @
bx @!
xA
b0 A!
b0 B
xB!
xC
bx C!
bx D
bx D!
xE
b0 E!
xF
bx F!
xG
bx G!
bx H
xH!
xI
xI!
0J
1J!
0K
xK!
xL
1L!
xM
xM!
bx N
xN!
bx O
xO!
xP
bx P!
bx Q
1Q!
bx R
1R!
bx S
0S!
xT
0T!
bx U
0U!
bx V
bx V!
xW
1W!
xX
1X!
xY
0Y!
bx Z
0Z!
bx [
0[!
b11111111111111111111111111111111 \
b10 \!
x]
0]!
x^
0^!
b1000 _
bx _!
x`
bx `!
bx a
xa!
xb
bx b!
xc
bx c!
xd
bx d!
xe
bx e!
bx f
bx f!
bx g
bx g!
b0 h
bx h!
b0 i
bx i!
bz j
bx j!
zk
bx l
bx m
xn
xo
b0 p
xq
bx r
bx s
bx t
bx u
xv
bx w
bx x
bx y
b0 z
b0 {
0|
0}
1~
$end
#5000
1!
bx &!
bx '!
00
bx 1!
04!
06
17
07!
09!
0:
0=
0=!
0?
0A
0B!
0C
0H!
0I!
0K!
0L
0M
0M!
xT!
xZ!
0]
1]!
0^
0`
0b
b0 c!
b0 d!
0n
0o
0q
b0 u
0v
#10000
0!
1"
0]!
1^!
#15000
1!
0'
b0 (
b0 *
b0 +
b0 ,
b0 -
1.
0/
13
b0 3!
04
15
07
b0 ;
b0 ;!
0<
0<!
b0 ?!
b0 @!
b100 A!
b0 C!
b0 D!
b10000 E!
b0 G!
b0 H
0I
b0 N
b0 O
b0 Q
0T
b0 V
b0 V!
0W
0X
1Y
b0 Z
b0 [
1]!
b1000 _
b0 a
1c
0d
1e
b0 f
b0 g
b1000 h
b1000 i
#20000
0!
0"
b101000000100000011001011000 #
b1 $
1%
0]!
0^!
b101000000100000011001011000 _!
b1 `!
1a!
b101 c!
b111 d!
b1 i!
b1 j!
#25000
1!
bx $!
bx %!
b1 )
bx )!
b1 *
bx *!
bx 0!
bx 2!
17
bx 8!
bx :!
bx >
bx B
xJ
xK
xS!
b1 U
xU!
xY!
0Z!
x[!
1]!
bx p
#30000
0!
0%
0]!
0a!
b0 g!
b0 h!
#35000
1!
07
0K
b1 Q
b0 R
0Y!
0[!
1]!
#40000
0!
b10010110011100011111010100 #
1%
0]!
b10010110011100011111010100 _!
1a!
#45000
1!
b10 *
b0 S
1]!
#50000
0!
0%
0]!
0a!
#55000
1!
b1010111011100111111111011101001 O
b10 Q
b1 R
1]!
#60000
0!
b100101010101110101000100000 #
1%
0]!
b100101010101110101000100000 _!
1a!
#65000
1!
b11 *
b1 S
1]!
#70000
0!
0%
0]!
0a!
#75000
1!
b10011111011100101100100010010 O
b11 Q
b10 R
1]!
#80000
0!
b100110000100101001010100000 #
1%
0]!
b100110000100101001010100000 _!
1a!
#85000
1!
b100 *
b10 S
1]!
#90000
0!
0%
0]!
0a!
#95000
1!
b11010011001101110000100011010011 O
b0 Q
b11 R
1]!
#100000
0!
0]!
#105000
1!
b0 R
b11 S
1]!
#110000
0!
0]!
#115000
1!
b11110110111010100011110010100 H
1I
b0 O
b0 S
b11110110111010100011110010100 V
1W
1]!
#120000
0!
0]!
#125000
1!
b1 (
b0 *
12
b1 ;
1<
b0 H
0I
1T
b0 V
0W
0Y
b11110110111010100011110010100 \
1]
1]!
b1000 _
1`
#130000
0!
0]!
b1 g!
b1 h!
#135000
1!
b1 -
b1 3!
14!
b11110110111010100011110010100 9
1:
b0 ;
0<
1H!
1K!
0T
1Y
b1 Z
b1 [
b11111111111111111111111111111111 \
0]
1]!
1^
b1000 _
0`
b1 a
1b
0c
b1 f
#140000
0!
0]!
b0 e!
b0 f!
b0 g!
b0 h!
#145000
1!
04!
0:
1C
b110 D
0H!
0K!
1N!
1O!
1]!
0^
0b
1c
b1 g
b110 m
1o
b110 y
#150000
0!
0]!
#155000
1!
b1001 '!
0C
1L
1M
0N!
0O!
1]!
0o
1v
#160000
0!
0]!
#165000
1!
b1001 %!
b1001 *!
19!
b1001 :!
1>!
1A
b1001 B
0L
0M
1]!
0v
#170000
0!
0]!
#175000
1!
05
09!
1=!
0>!
1?
b1010 @
b1 @!
0A
1]!
b1010 l
1n
b1010 x
#180000
0!
0]!
#185000
1!
b101011011110001000001000000 &!
b10 (
16!
b1011 @
1F
1]!
b1011 l
b1 u
b1011 x
#190000
0!
0]!
#195000
1!
b101011011110001000001000000 $!
b1001011010111000010000000 &!
b101011011110001000001000000 )!
b1001 +
15
16
06!
17!
b101011011110001000001000000 8!
1=
b101011011110001000001000000 >
b1 ?!
b1100 @
1B!
0F
b1001 G!
1I!
1M!
b1001 V!
1]!
b1100 l
b1100 x
#200000
0!
0]!
#205000
1!
b1001011010111000010000000 $!
b1111111111000001001100100 &!
b1001 )
b1001011010111000010000000 )!
0.
15!
06
b1001011010111000010000000 8!
b1 ;!
1=
b1001011010111000010000000 >
b1101 @
b1 D!
1G
0I!
0M!
b1001 U
1]!
b1101 l
b1101 x
#210000
0!
0]!
#215000
1!
b1111111111000001001100100 $!
b100100101000011100110110000 &!
b1111111111000001001100100 )!
b101011011110001000001000000 ,
10
b1111111111000001001100100 8!
b10 ;!
1=
0=!
b1111111111000001001100100 >
0?
b1 C!
b10 D!
1Z!
1]!
0n
#220000
0!
0]!
#225000
1!
b100100101000011100110110000 $!
b100100101000011100110110000 )!
b1 *
b1001011010111000010000000 ,
b100100101000011100110110000 8!
b11 ;!
b100100101000011100110110000 >
b10 C!
b11 D!
1K
1Y!
1[!
1]!
b0 u
#230000
0!
0]!
#235000
1!
b10 *
b1111111111000001001100100 ,
07!
b0 ;!
0=
0B!
1C
b11 C!
b111 D
b100 D!
b1 Q
1]!
b111 m
1o
b111 y
#240000
0!
0]!
#245000
1!
b10001 '!
b11 *
b100100101000011100110110000 ,
1.
0C
b100 C!
b10 Q
b1 R
1]!
0o
1v
#250000
0!
0]!
#255000
1!
b10001 %!
b100 *
b10001 *!
00
19!
b10001 :!
1>!
1A
b10001 B
b1100010001100010110110110011001 O
b11 Q
b10 R
b1 S
1]!
0v
#260000
0!
0]!
#265000
1!
05
09!
1=!
0>!
1?
b10010 @
b10 @!
0A
b10000001001011000011011001010 O
b0 Q
b11 R
b10 S
1]!
b10010 l
1n
b10010 x
#270000
0!
0]!
#275000
1!
b1101001111101100111000000 &!
b10011 @
b11011001110010000011100100010011 O
b0 R
b11 S
1]!
b10011 l
b1 u
b10011 x
#280000
0!
0]!
#285000
1!
b1101001111101100111000000 $!
b11010011010100101010000100 &!
b1101001111101100111000000 )!
17!
b1101001111101100111000000 8!
1=
b1101001111101100111000000 >
b10100 @
1B!
b10001000111111001111010110100 H
1I
b0 O
b0 S
b10001000111111001111010110100 V
1W
1]!
b10100 l
b10100 x
#290000
0!
0]!
#295000
1!
b11010011010100101010000100 $!
b10110110000111001100111000 &!
b11010011010100101010000100 )!
0.
05!
16!
b11010011010100101010000100 8!
b1 ;
b1 ;!
1=
b11010011010100101010000100 >
b10101 @
b101 D!
1F
0G
b0 H
0I
b0 V
0W
0Y
b10001000111111001111010110100 \
1]
1]!
b1000 _
1`
b10101 l
b10101 x
#300000
0!
0]!
#305000
1!
b10110110000111001100111000 $!
b11101111111001010010110100 &!
b10110110000111001100111000 )!
b10001 +
15
16
06!
b10110110000111001100111000 8!
b10 ;!
1=
0=!
b10110110000111001100111000 >
0?
b10 ?!
b110 D!
0F
b10001 G!
1I!
1M!
b10001 V!
b10 [
0]
1]!
0`
0c
b10 f
0n
#310000
0!
0]!
#315000
1!
b11101111111001010010110100 $!
b10001 )
b11101111111001010010110100 )!
b0 *
15!
06
b11101111111001010010110100 8!
b11 ;!
b11101111111001010010110100 >
b111 D!
1G
0I!
0M!
b10001 U
0Z!
1]!
b0 u
#320000
0!
0]!
#325000
1!
b1101001111101100111000000 ,
10
07!
b0 ;!
0=
0B!
1C
b101 C!
b1000 D
b1000 D!
0K
0Y!
1Z!
0[!
1]!
b1000 m
1o
b1000 y
#330000
0!
0]!
#335000
1!
b0 '!
b1 *
b11010011010100101010000100 ,
0C
b110 C!
1K
1Y!
1[!
1]!
0o
1v
#340000
0!
0]!
#345000
1!
b0 %!
b10 *
b0 *!
b10110110000111001100111000 ,
19!
b0 :!
1A
b0 B
b111 C!
b1 Q
1]!
0v
#350000
0!
0]!
#355000
1!
b11 *
b11101111111001010010110100 ,
1.
17
09!
0A
b1000 C!
b10 Q
b1 R
1]!
#360000
0!
0]!
#365000
1!
b100 *
00
b1000001001010001000111010011001 O
b11 Q
b10 R
b1 S
1]!
#370000
0!
0]!
#375000
1!
b10100000001110000111110100010 O
b0 Q
b11 R
b10 S
1]!
#380000
0!
0]!
#385000
1!
b10010000101100011000010101110011 O
b0 R
b11 S
1]!
#390000
0!
0]!
#395000
1!
b11111100001010101111101010011100 H
1I
b0 O
b0 S
b11111100001010101111101010011100 V
1W
1]!
#400000
0!
0]!
#405000
1!
b11 (
b10 ;
b0 H
0I
b0 V
0W
b10001000111111001111010110100 \
1]
1]!
b1000 _
1`
#410000
0!
0]!
#415000
1!
b11 [
0]
1]!
0`
b11 f
#420000
0!
0]!
#425000
1!
1]!
#430000
0!
0]!
#435000
1!
1]!
#440000
0!
0]!
#445000
1!
1]!
#450000
0!
0]!
#455000
1!
1]!
#460000
0!
0]!
#465000
1!
1]!
#470000
0!
0]!
#475000
1!
1]!
#480000
0!
0]!
#485000
1!
1]!
#490000
0!
0]!
#495000
1!
1]!
#500000
0!
0]!
#505000
1!
1]!
#510000
0!
0]!
#515000
1!
1]!
#520000
0!
0]!
#525000
1!
1]!
#530000
0!
0]!
#535000
1!
1]!
#540000
0!
0]!
#545000
1!
1]!
#550000
0!
0]!
#555000
1!
1]!
#560000
0!
0]!
#565000
1!
1]!
#570000
0!
0]!
#575000
1!
1]!
#580000
0!
0]!
#585000
1!
1]!
#590000
0!
0]!
#595000
1!
1]!
#600000
0!
0]!
#605000
1!
1]!
#610000
0!
0]!
#615000
1!
1]!
#620000
0!
0]!
#625000
1!
1]!
#630000
0!
0]!
#635000
1!
1]!

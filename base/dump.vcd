$date
   Thu Nov  2 21:38:28 2023
$end
$version
  2023.1
$end
$timescale
  1ps
$end
$scope module distance_tb $end
$var reg 1 0 clk_in $end
$var reg 1 1 rst_in $end
$var reg 32 # distance_sq_out [31:0] $end
$var reg 1 $ data_valid_out $end
$var reg 32 2 vertex_pos_in0 [31:0] $end
$var reg 32 3 vertex_pos_in1 [31:0] $end
$var reg 32 4 vertex_pos_in2 [31:0] $end
$var reg 32 5 vertex_pos_in3 [31:0] $end
$var reg 32 6 query_pos_in0 [31:0] $end
$var reg 32 7 query_pos_in1 [31:0] $end
$var reg 32 8 query_pos_in2 [31:0] $end
$var reg 32 9 query_pos_in3 [31:0] $end
$var reg 1 : data_valid_in0 $end
$var reg 1 ; data_valid_in1 $end
$var reg 1 < data_valid_in2 $end
$var reg 1 = data_valid_in3 $end
$scope module distance_calculator $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var reg 32 # distance_sq_out [31:0] $end
$var reg 1 $ data_valid_out $end
$var reg 3 % state [2:0] $end
$var reg 2 & i [1:0] $end
$scope module add_distances $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 ' data_valid_in $end
$var reg 32 # distance_sq_out [31:0] $end
$var reg 1 $ data_valid_out $end
$var reg 32 ( \genblk1.distance1  [31:0] $end
$var reg 32 ) \genblk1.distance2  [31:0] $end
$var reg 32 * \genblk1.total_distance  [31:0] $end
$var reg 1 + \genblk1.add_valid1  $end
$var reg 1 , \genblk1.add_valid2  $end
$var reg 1 - \genblk1.added_dist1  $end
$var reg 1 . \genblk1.added_dist2  $end
$scope module genblk1.adder1 $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 ' data_valid_in $end
$var reg 32 ( distance_sq_out [31:0] $end
$var reg 1 + data_valid_out $end
$upscope $end
$scope module genblk1.adder2 $end
$var wire 1 ! clk_in $end
$var wire 1 " rst_in $end
$var wire 1 ' data_valid_in $end
$var reg 32 ) distance_sq_out [31:0] $end
$var reg 1 , data_valid_out $end
$upscope $end
$upscope $end
$upscope $end
$scope begin Block64_6 $end
$var reg 32 / i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b0 #
0$
bx %
bx &
x'
bx (
bx )
bx *
x+
x,
x-
x.
b100 /
00
01
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
bx 9
x:
x;
x<
x=
$end
#5000
1!
0+
0,
10
b0 2
b0 3
b0 4
b0 5
b0 6
b0 7
b0 8
b0 9
0:
0;
0<
0=
#10000
0!
1"
00
11
#15000
1!
b0 %
b0 &
0'
b0 (
b0 )
10
#20000
0!
0"
00
01
b101 6
b111 7
b1010 8
b110010 9
#25000
1!
10
#30000
0!
00
#35000
1!
10
#40000
0!
00
b1000 2
1:
#45000
1!
b1 &
10
#50000
0!
00
b10 3
0:
1;
#55000
1!
b10 &
10
#60000
0!
00
b1111 4
0;
1<
#65000
1!
b11 &
10
#70000
0!
00
b1010000 5
0<
1=
#75000
1!
b0 &
10
#80000
0!
00
0=
#85000
1!
b1 %
10
#90000
0!
00
#95000
1!
b1 &
10
#100000
0!
00
#105000
1!
b10 &
10
#110000
0!
00
#115000
1!
b11 &
10
#120000
0!
00
#125000
1!
b0 &
10
#130000
0!
00
#135000
1!
b10 %
b1 &
1'
10
#140000
0!
00
#145000
1!
b1110111111 #
1$
b100010 (
b1110011101 )
1+
1,
10
#150000
0!
00
#155000
1!
b0 %
0'
10
#160000
0!
00
#165000
1!
b0 #
0$
0+
0,
10
#170000
0!
00
#175000
1!
10
#180000
0!
00
#185000
1!
10
#190000
0!
00
#195000
1!
10
#200000
0!
00
#205000
1!
10
#210000
0!
00
#215000
1!
10
#220000
0!
00
#225000
1!
10
#230000
0!
00
#235000
1!
10
#240000
0!
00
#245000
1!
10
#250000
0!
00
#255000
1!
10
#260000
0!
00
#265000
1!
10
#270000
0!
00
#275000
1!
10
#280000
0!
00
#285000
1!
10
#290000
0!
00
#295000
1!
10
#300000
0!
00
#305000
1!
10
#310000
0!
00
#315000
1!
10
#320000
0!
00
#325000
1!
10
#330000
0!
00
#335000
1!
10
#340000
0!
00
#345000
1!
10
#350000
0!
00
#355000
1!
10
#360000
0!
00
#365000
1!
10
#370000
0!
00
#375000
1!
10
#380000
0!
00
#385000
1!
10
#390000
0!
00
#395000
1!
10
#400000
0!
00
#405000
1!
10
#410000
0!
00
#415000
1!
10
#420000
0!
00
#425000
1!
10
#430000
0!
00
#435000
1!
10
#440000
0!
00
#445000
1!
10
#450000
0!
00
#455000
1!
10
#460000
0!
00
#465000
1!
10
#470000
0!
00
#475000
1!
10
#480000
0!
00
#485000
1!
10
#490000
0!
00
#495000
1!
10
#500000
0!
00
#505000
1!
10
#510000
0!
00
#515000
1!
10
#520000
0!
00
#525000
1!
10
#530000
0!
00
#535000
1!
10
#540000
0!
00
#545000
1!
10
#550000
0!
00
#555000
1!
10
#560000
0!
00
#565000
1!
10
#570000
0!
00
#575000
1!
10
